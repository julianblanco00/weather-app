[{"/home/julian/Documentos/my-projects/react/weather-app/src/index.js":"1","/home/julian/Documentos/my-projects/react/weather-app/src/App.js":"2","/home/julian/Documentos/my-projects/react/weather-app/src/components/Navbar/Navbar.js":"3","/home/julian/Documentos/my-projects/react/weather-app/src/store/store.js":"4","/home/julian/Documentos/my-projects/react/weather-app/src/store/reducers/reducers.js":"5","/home/julian/Documentos/my-projects/react/weather-app/src/components/MyCities/AddCity.js":"6","/home/julian/Documentos/my-projects/react/weather-app/src/components/MyCities/MyCities.js":"7","/home/julian/Documentos/my-projects/react/weather-app/src/components/Cities/DefaultCities.js":"8","/home/julian/Documentos/my-projects/react/weather-app/src/components/Cities/CitiesTemplate.js":"9","/home/julian/Documentos/my-projects/react/weather-app/src/config/config.js":"10","/home/julian/Documentos/my-projects/react/weather-app/src/controllers/saveCity.js":"11","/home/julian/Documentos/my-projects/react/weather-app/src/components/Alert/Alert.js":"12","/home/julian/Documentos/my-projects/react/weather-app/src/store/actions/addCity.js":"13","/home/julian/Documentos/my-projects/react/weather-app/src/store/actions/fetchWeather.js":"14","/home/julian/Documentos/my-projects/react/weather-app/src/components/Snackbar/Snackbar.js":"15"},{"size":267,"mtime":1608415266670,"results":"16","hashOfConfig":"17"},{"size":3171,"mtime":1608643083843,"results":"18","hashOfConfig":"17"},{"size":978,"mtime":1608413641426,"results":"19","hashOfConfig":"17"},{"size":434,"mtime":1608580230405,"results":"20","hashOfConfig":"17"},{"size":464,"mtime":1608634892301,"results":"21","hashOfConfig":"17"},{"size":704,"mtime":1608638939568,"results":"22","hashOfConfig":"17"},{"size":786,"mtime":1608639004937,"results":"23","hashOfConfig":"17"},{"size":735,"mtime":1608569036214,"results":"24","hashOfConfig":"17"},{"size":787,"mtime":1608568146888,"results":"25","hashOfConfig":"17"},{"size":56,"mtime":1608641234647,"results":"26","hashOfConfig":"17"},{"size":279,"mtime":1608643214947,"results":"27","hashOfConfig":"17"},{"size":506,"mtime":1608638887932,"results":"28","hashOfConfig":"17"},{"size":148,"mtime":1608635038964,"results":"29","hashOfConfig":"17"},{"size":1621,"mtime":1608642790995,"results":"30","hashOfConfig":"17"},{"size":382,"mtime":1608639931768,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1c4mjrz",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/home/julian/Documentos/my-projects/react/weather-app/src/index.js",[],["66","67"],"/home/julian/Documentos/my-projects/react/weather-app/src/App.js",["68"],"import {useEffect, useState} from 'react'\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux'\nimport axios from 'axios'\n\nimport './App.css';\nimport NavBar from './components/Navbar/Navbar'\nimport Cities from './components/Cities/DefaultCities'\nimport AddCity from './components/MyCities/AddCity';\nimport Alert from './components/Alert/Alert';\nimport Snackbar from './components/Snackbar/Snackbar'\nimport MyCities from './components/MyCities/MyCities';\n\nimport getWeather from './store/actions/fetchWeather';\nimport addCity from './store/actions/addCity'\n\nimport getCityToSave from './controllers/saveCity';\n\nconst App = props => {\n  \n  const [dataState, setDataState] = useState({\n    errors: false,\n    text: ''\n  })\n\n  const [open, setOpen] = useState(false)\n  const [openSnackbar, setOpenSnackbar] = useState(false)\n  const [urlApi, setUrlApi] = useState('')\n\n  const {getWeather: getWeatherProps, cities, addCity: propsAddCity, myCities} = props\n\n  const handleCloseAlert = (event, reason) => {\n    if (reason === 'clickaway') return;\n    setOpen(false);\n  };\n\n  const handleCloseSnackbar = (event, reason) => {\n    if (reason === 'clickaway') return;\n    setOpenSnackbar(false);\n  }\n\n\n  useEffect(() => {\n    const fetcher = async () => {\n      const res = await axios.get('http://localhost:3000/getUrl')\n      setUrlApi(res.data.url)\n      getWeatherProps(res)\n    }\n\n    fetcher()\n  }, [])\n\n  const handleOnKeyPress = async (city) => {\n\n    setOpenSnackbar(true)\n    setOpen(false)\n\n    const data = await getCityToSave(city, urlApi);\n    \n    if(data.error){\n      setDataState({errors: true, text: 'The city could not be found'})\n      setOpen(true)\n      setOpenSnackbar(false)\n      return;\n\n    }else{\n\n      const exists = myCities.find(city => city.location.name === data.location.name);\n\n      if(exists){\n        setDataState({errors: true, text: 'You have already added this city'})\n      \n      }else{\n        await propsAddCity(data);\n        setDataState({errors: false})\n\n      }\n\n      setOpen(true)\n      setOpenSnackbar(false);\n    }\n\n  }\n\n  return(\n    <>\n      <NavBar/>\n      \n      <div className=\"container\">\n        {(cities.length) ? <Cities cities={cities} /> : <h3>Loading...</h3>}\n        \n        <AddCity \n          onKeyPress={(city) => handleOnKeyPress(city)}\n          myCitiesComponent={<MyCities myCities={myCities} />}\n        />\n\n        <Snackbar onClose={handleCloseSnackbar} open={openSnackbar}/>\n\n        {(dataState.errors) ? \n          <Alert \n            open={open} \n            onClose={handleCloseAlert}\n            severity=\"error\" \n            text={dataState.text}\n          />\n          :\n          <Alert \n            open={open} \n            severity=\"success\"\n            onClose={handleCloseAlert}\n            text=\"City saved successfully\"\n          />}\n      </div>\n\n    </>\n  )\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    cities: state.cities,\n    myCities: state.myCities\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return (bindActionCreators({\n\n    getWeather,\n    addCity\n    \n  }, dispatch)) \n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","/home/julian/Documentos/my-projects/react/weather-app/src/components/Navbar/Navbar.js",[],"/home/julian/Documentos/my-projects/react/weather-app/src/store/store.js",[],"/home/julian/Documentos/my-projects/react/weather-app/src/store/reducers/reducers.js",[],"/home/julian/Documentos/my-projects/react/weather-app/src/components/MyCities/AddCity.js",[],"/home/julian/Documentos/my-projects/react/weather-app/src/components/MyCities/MyCities.js",[],"/home/julian/Documentos/my-projects/react/weather-app/src/components/Cities/DefaultCities.js",["69"],"import {useState, useEffect} from 'react'\nimport CitiesTemplate from './CitiesTemplate'\n\nconst Cities = ({cities}) => {\n    \n    const [currentCity, setCurrentCity] = useState(0)\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n\n            setCurrentCity(pos => {\n                if(cities.length - 1 === pos){\n                    return 0\n                }else{\n                    return pos + 1\n                }\n            })\n\n        }, 10000);\n\n        return () => clearInterval(interval)\n    }, [])\n\n    const {location, current} = cities[currentCity]\n\n    const loadCity = () => {\n        return <CitiesTemplate location={location} current={current}/>\n    }\n\n    return loadCity()\n}\n\nexport default Cities","/home/julian/Documentos/my-projects/react/weather-app/src/components/Cities/CitiesTemplate.js",[],"/home/julian/Documentos/my-projects/react/weather-app/src/config/config.js",[],"/home/julian/Documentos/my-projects/react/weather-app/src/controllers/saveCity.js",[],"/home/julian/Documentos/my-projects/react/weather-app/src/components/Alert/Alert.js",[],"/home/julian/Documentos/my-projects/react/weather-app/src/store/actions/addCity.js",[],"/home/julian/Documentos/my-projects/react/weather-app/src/store/actions/fetchWeather.js",["70","71"],"import axios from 'axios'\nimport {apiKey} from '../../config/config'\n\nexport const GET_WEATHER = 'GET_WEATHER'\n\n\nconst defaultLocations = [\n    { lattlong: \"-34.603722, -58.381592\" },\n    { lattlong: \"-33.459229, -70.645348\" },\n    { lattlong: \"40.730610,- 73.935242\" },\n    { lattlong: \"40.4165669, -3.704676\"}\n]\n\nconst dispatchWeather = params => async (dispatch) => {\n\n    const baseUrl = params.data.url;\n\n    const data1 = {\"request\":{\"type\":\"City\",\"query\":\"Miami, United States of America\",\"language\":\"en\",\"unit\":\"m\"},\"location\":{\"name\":\"Miami\",\"country\":\"United States of America\",\"region\":\"Florida\",\"lat\":\"25.774\",\"lon\":\"-80.194\",\"timezone_id\":\"America/Kentucky/Monticello\",\"localtime\":\"2020-12-21 14:53\",\"localtime_epoch\":1608562380,\"utc_offset\":\"-5.0\"},\"current\":{\"observation_time\":\"07:53 PM\",\"temperature\":24,\"weather_code\":116,\"weather_icons\":[\"https://assets.weatherstack.com/images/wsymbols01_png_64/wsymbol_0002_sunny_intervals.png\"],\"weather_descriptions\":[\"Partly cloudy\"],\"wind_speed\":17,\"wind_degree\":310,\"wind_dir\":\"NW\",\"pressure\":1017,\"precip\":0,\"humidity\":69,\"cloudcover\":75,\"feelslike\":26,\"uv_index\":5,\"visibility\":16,\"is_day\":\"yes\"}}\n\n    let citiesArr = []\n\n    for (const location of defaultLocations) {\n\n        const url = `${baseUrl}/current?access_key=${apiKey}&query=${location.lattlong.split(\" \").join(\"\")}`\n  \n        try{\n            // const { data } = await axios.get(url);\n            citiesArr.push(data1)\n\n\n        }catch(err){\n          throw err\n        }\n\n    }\n    console.log(citiesArr);\n    dispatch({type: GET_WEATHER, payload: citiesArr})\n\n}\n\nexport default dispatchWeather","/home/julian/Documentos/my-projects/react/weather-app/src/components/Snackbar/Snackbar.js",[],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":51,"column":6,"nodeType":"78","endLine":51,"endColumn":8,"suggestions":"79"},{"ruleId":"76","severity":1,"message":"80","line":22,"column":8,"nodeType":"78","endLine":22,"endColumn":10,"suggestions":"81"},{"ruleId":"82","severity":1,"message":"83","line":1,"column":8,"nodeType":"84","messageId":"85","endLine":1,"endColumn":13},{"ruleId":"82","severity":1,"message":"86","line":24,"column":15,"nodeType":"84","messageId":"85","endLine":24,"endColumn":18},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getWeatherProps'. Either include it or remove the dependency array.","ArrayExpression",["89"],"React Hook useEffect has a missing dependency: 'cities.length'. Either include it or remove the dependency array. If 'setCurrentCity' needs the current value of 'cities.length', you can also switch to useReducer instead of useState and read 'cities.length' in the reducer.",["90"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'url' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},{"desc":"93","fix":"94"},"Update the dependencies array to be: [getWeatherProps]",{"range":"95","text":"96"},"Update the dependencies array to be: [cities.length]",{"range":"97","text":"98"},[1419,1421],"[getWeatherProps]",[524,526],"[cities.length]"]